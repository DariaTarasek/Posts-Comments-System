version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: posts-comments-system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./internal/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"
  db_test:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: posts-comments-test-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - db_test_data:/var/lib/postgresql/data
      - ./internal/migrations/init-test-db.sql:/docker-entrypoint-initdb.d/init-test-db.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 5
  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT: 8080
      STORAGE_TYPE: postgres
      POSTGRES_DB: posts-comments-system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_SSLMODE: disable
    ports:
      - "8080:8080"
    restart: unless-stopped
  app_test:
    build: .
    depends_on:
      db_test:
        condition: service_healthy
    environment:
      STORAGE_TYPE: postgres
      POSTGRES_DB: posts-comments-test-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db_test
      POSTGRES_PORT: 5432
      POSTGRES_SSLMODE: disable
    command: go test ./... -v

volumes:
  db_data:
  db_test_data:
